# -*- text -*-
##
## mods-available/sql -- SQL modules
##
##	$Id$

######################################################################
#
#  Configuration for the SQL module
#
#  The database schemas and queries are located in subdirectories:
#
#	sql/<DB>/main/schema.sql	Schema
#	sql/<DB>/main/queries.conf	Authorisation and Accounting queries
#
#  Where "DB" is mysql, mssql, oracle, or postgresql.
#
#  The name used to query SQL is sql_user_name, which is set in the file
#
#     raddb/mods-config/sql/main/${dialect}/queries.conf
#
#  If you are using realms, that configuration should be changed to use
#  the Stripped-User-Name attribute.  See the comments around sql_user_name
#  for more information.
#

sql {
	dialect = "mysql"
	driver = "rlm_sql_${dialect}"

	#mysql {
		# If any of the files below are set, TLS encryption is enabled
		#tls {
		#	ca_file = "/etc/ssl/certs/my_ca.crt"
		#	ca_path = "/etc/ssl/certs/"
		#	certificate_file = "/etc/ssl/certs/private/client.crt"
		#	private_key_file = "/etc/ssl/certs/private/client.key"
		#	cipher = "DHE-RSA-AES256-SHA:AES128-SHA"

		#	tls_required = yes
		#	tls_check_cert = no
		#	tls_check_cert_cn = no
		#}

		# If yes, (or auto and libmysqlclient reports warnings are
		# available), will retrieve and log additional warnings from
		# the server if an error has occured. Defaults to 'auto'
		#warnings = auto
	#}

	# Connection info:

	server = $ENV{DB_HOST}
	port = $ENV{DB_PORT}
	login = $ENV{DB_USER}
	password = $ENV{DB_PASSWORD}
	radius_db = $ENV{DB_NAME}

	# If you want both stop and start records logged to the
	# same SQL table, leave this as is.  If you want them in
	# different tables, put the start table in acct_table1
	# and stop table in acct_table2
	acct_table1 = "radacct"
	acct_table2 = "radacct"

	# Allow for storing data after authentication
	postauth_table = "radpostauth"

	# Tables containing 'check' items
	authcheck_table = "radcheck"
	groupcheck_table = "radgroupcheck"

	# Tables containing 'reply' items
	authreply_table = "radreply"
	groupreply_table = "radgroupreply"

	# Table to keep group info
	usergroup_table = "radusergroup"

	# Remove stale session if checkrad does not see a double login
	delete_stale_sessions = yes

	logfile = ${logdir}/sqlquery.log

	query_timeout = 5

	read_clients = yes
	client_table = "nas"

	group_attribute = "SQL-Group"

	# Read database-specific queries
	$INCLUDE ${modconfdir}/${.:name}/main/${dialect}/queries.conf
}
